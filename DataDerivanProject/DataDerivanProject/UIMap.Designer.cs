// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace DataDerivanProject
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// 1+2=3
        /// </summary>
        public void AddNumber()
        {
            #region Variable Declarations
            WinButton uIItem1Button = this.UICalculatorWindow.UIItemWindow.UIItem1Button;
            WinButton uIAddButton = this.UICalculatorWindow.UIItemWindow1.UIAddButton;
            WinButton uIItem2Button = this.UICalculatorWindow.UIItemWindow2.UIItem2Button;
            WinButton uIEqualsButton = this.UICalculatorWindow.UIItemWindow3.UIEqualsButton;
            #endregion

            // Click '1' button
            Mouse.Click(uIItem1Button, new Point(22, 8));

            // Click 'Add' button
            Mouse.Click(uIAddButton, new Point(22, 14));

            // Click '2' button
            Mouse.Click(uIItem2Button, new Point(20, 11));

            // Click 'Equals' button
            Mouse.Click(uIEqualsButton, new Point(20, 28));
        }
        
        /// <summary>
        /// AddNumer
        /// </summary>
        public void AddNumer()
        {
            #region Variable Declarations
            WinButton uIItem1Button = this.UICalculatorWindow.UIItemWindow.UIItem1Button;
            WinButton uIAddButton = this.UICalculatorWindow.UIItemWindow1.UIAddButton;
            WinButton uIItem2Button = this.UICalculatorWindow.UIItemWindow2.UIItem2Button;
            WinButton uIEqualsButton = this.UICalculatorWindow.UIItemWindow3.UIEqualsButton;
            #endregion

            // Click '1' button
            Mouse.Click(uIItem1Button, new Point(10, 11));

            // Click '1' button
            Mouse.Click(uIItem1Button, new Point(10, 11));

            // Click 'Add' button
            Mouse.Click(uIAddButton, new Point(18, 10));

            // Click '2' button
            Mouse.Click(uIItem2Button, new Point(21, 10));

            // Click 'Equals' button
            Mouse.Click(uIEqualsButton, new Point(24, 37));
        }
        
        /// <summary>
        /// ValidateSum - Use 'ValidateSumExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ValidateSum()
        {
            #region Variable Declarations
            WinText uIItem3Text = this.UICalculatorWindow.UIItem3Window.UIItem3Text;
            #endregion

            // Verify that the 'ControlType' property of '3' label equals '13'
            Assert.AreEqual(this.ValidateSumExpectedValues.UIItem3TextControlType, uIItem3Text.ControlType.ToString(), "success");
        }
        
        /// <summary>
        /// CheckSum - Use 'CheckSumExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckSum()
        {
            #region Variable Declarations
            WinText uIItem3Text = this.UICalculatorWindow.UIItem3Window.UIItem3Text;
            #endregion

            // Verify that the 'ControlType' property of '3' label equals '13'
            Assert.AreEqual(this.CheckSumExpectedValues.UIItem3TextControlType, uIItem3Text.ControlType.ToString(), "T");
        }
        
        #region Properties
        public virtual ValidateSumExpectedValues ValidateSumExpectedValues
        {
            get
            {
                if ((this.mValidateSumExpectedValues == null))
                {
                    this.mValidateSumExpectedValues = new ValidateSumExpectedValues();
                }
                return this.mValidateSumExpectedValues;
            }
        }
        
        public virtual CheckSumExpectedValues CheckSumExpectedValues
        {
            get
            {
                if ((this.mCheckSumExpectedValues == null))
                {
                    this.mCheckSumExpectedValues = new CheckSumExpectedValues();
                }
                return this.mCheckSumExpectedValues;
            }
        }
        
        public UICalculatorWindow UICalculatorWindow
        {
            get
            {
                if ((this.mUICalculatorWindow == null))
                {
                    this.mUICalculatorWindow = new UICalculatorWindow();
                }
                return this.mUICalculatorWindow;
            }
        }
        #endregion
        
        #region Fields
        private ValidateSumExpectedValues mValidateSumExpectedValues;
        
        private CheckSumExpectedValues mCheckSumExpectedValues;
        
        private UICalculatorWindow mUICalculatorWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidateSum'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class ValidateSumExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of '3' label equals '13'
        /// </summary>
        public string UIItem3TextControlType = "13";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckSum'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class CheckSumExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of '3' label equals '13'
        /// </summary>
        public string UIItem3TextControlType = "13";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UICalculatorWindow : WinWindow
    {
        
        public UICalculatorWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Calculator";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CalcFrame";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow2 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow2(this);
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIItemWindow3 UIItemWindow3
        {
            get
            {
                if ((this.mUIItemWindow3 == null))
                {
                    this.mUIItemWindow3 = new UIItemWindow3(this);
                }
                return this.mUIItemWindow3;
            }
        }
        
        public UIItem3Window UIItem3Window
        {
            get
            {
                if ((this.mUIItem3Window == null))
                {
                    this.mUIItem3Window = new UIItem3Window(this);
                }
                return this.mUIItem3Window;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        
        private UIItemWindow2 mUIItemWindow2;
        
        private UIItemWindow3 mUIItemWindow3;
        
        private UIItem3Window mUIItem3Window;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "131";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UIItem1Button
        {
            get
            {
                if ((this.mUIItem1Button == null))
                {
                    this.mUIItem1Button = new WinButton(this);
                    #region Search Criteria
                    this.mUIItem1Button.SearchProperties[WinButton.PropertyNames.Name] = "1";
                    this.mUIItem1Button.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItem1Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItem1Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "93";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UIAddButton
        {
            get
            {
                if ((this.mUIAddButton == null))
                {
                    this.mUIAddButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIAddButton.SearchProperties[WinButton.PropertyNames.Name] = "Add";
                    this.mUIAddButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIAddButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIAddButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "132";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UIItem2Button
        {
            get
            {
                if ((this.mUIItem2Button == null))
                {
                    this.mUIItem2Button = new WinButton(this);
                    #region Search Criteria
                    this.mUIItem2Button.SearchProperties[WinButton.PropertyNames.Name] = "2";
                    this.mUIItem2Button.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItem2Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItem2Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow3 : WinWindow
    {
        
        public UIItemWindow3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "121";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UIEqualsButton
        {
            get
            {
                if ((this.mUIEqualsButton == null))
                {
                    this.mUIEqualsButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIEqualsButton.SearchProperties[WinButton.PropertyNames.Name] = "Equals";
                    this.mUIEqualsButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIEqualsButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIEqualsButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItem3Window : WinWindow
    {
        
        public UIItem3Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "150";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinText UIItem3Text
        {
            get
            {
                if ((this.mUIItem3Text == null))
                {
                    this.mUIItem3Text = new WinText(this);
                    #region Search Criteria
                    this.mUIItem3Text.SearchProperties[WinText.PropertyNames.Name] = "Result";
                    this.mUIItem3Text.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIItem3Text;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIItem3Text;
        #endregion
    }
}
